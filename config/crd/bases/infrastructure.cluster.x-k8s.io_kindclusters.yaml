---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kindclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KindCluster
    listKind: KindClusterList
    plural: kindclusters
    shortNames:
    - kc
    singular: kindcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Whether the KIND cluster is currently running with the specified
        configuration
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: KindCluster is the Schema for the kindclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KindClusterSpec defines the desired state of KindCluster
            properties:
              nodes:
                items:
                  description: Node contains settings for a node in the `kind` Cluster.
                    A node in kind config represent a container that will be provisioned
                    with all the components required for the assigned role in the
                    Kubernetes cluster
                  properties:
                    extraMounts:
                      description: 'TODO: cri-like types should be inline instead
                        ExtraMounts describes additional mount points for the node
                        container These may be used to bind a hostPath'
                      items:
                        description: "Mount specifies a host volume to mount into
                          a container. This is a close copy of the upstream cri Mount
                          type see: k8s.io/kubernetes/pkg/kubelet/apis/cri/runtime/v1alpha2
                          It additionally serializes the \"propagation\" field with
                          the string enum names on disk as opposed to the int32 values,
                          and the serialized field names have been made closer to
                          core/v1 VolumeMount field names In yaml this looks like:
                          \n containerPath: /foo hostPath: /bar readOnly: true selinuxRelabel:
                          false propagation: None \n Propagation may be one of: None,
                          HostToContainer, Bidirectional"
                        properties:
                          containerPath:
                            description: Path of the mount within the container.
                            type: string
                          hostPath:
                            description: Path of the mount on the host. If the hostPath
                              doesn't exist, then runtimes should report error. If
                              the hostpath is a symbolic link, runtimes should follow
                              the symlink and mount the real destination to container.
                            type: string
                          propagation:
                            description: Requested propagation mode.
                            type: string
                          readOnly:
                            description: If set, the mount is read-only.
                            type: boolean
                          selinuxRelabel:
                            description: If set, the mount needs SELinux relabeling.
                            type: boolean
                        type: object
                      type: array
                    extraPortMappings:
                      description: ExtraPortMappings describes additional port mappings
                        for the node container binded to a host Port
                      items:
                        description: "PortMapping specifies a host port mapped into
                          a container port. In yaml this looks like: \n containerPort:
                          80 hostPort: 8000 listenAddress: 127.0.0.1 protocol: TCP"
                        properties:
                          containerPort:
                            description: Port within the container.
                            format: int32
                            type: integer
                          hostPort:
                            description: "Port on the host. \n If unset, a random
                              port will be selected. \n NOTE: if you set the special
                              value of `-1` then the node backend (docker, podman...)
                              will be left to pick the port instead. This is potentially
                              useful for remote hosts, BUT it means when the container
                              is restarted it will be randomized. Leave this unset
                              to allow kind to pick it."
                            format: int32
                            type: integer
                          listenAddress:
                            description: 'TODO: add protocol (tcp/udp) and port-ranges'
                            type: string
                          protocol:
                            description: Protocol (TCP/UDP/SCTP)
                            type: string
                        type: object
                      type: array
                    image:
                      description: Image is the node image to use when creating this
                        node If unset a default image will be used, see defaults.Image
                      type: string
                    kubeadmConfigPatches:
                      description: "KubeadmConfigPatches are applied to the generated
                        kubeadm config as merge patches. The `kind` field must match
                        the target object, and if `apiVersion` is specified it will
                        only be applied to matching objects. \n This should be an
                        inline yaml blob-string \n https://tools.ietf.org/html/rfc7386
                        \n The node-level patches will be applied after the cluster-level
                        patches have been applied. (See Cluster.KubeadmConfigPatches)"
                      items:
                        type: string
                      type: array
                    kubeadmConfigPatchesJSON6902:
                      description: "KubeadmConfigPatchesJSON6902 are applied to the
                        generated kubeadm config as JSON 6902 patches. The `kind`
                        field must match the target object, and if group or version
                        are specified it will only be objects matching the apiVersion:
                        group+\"/\"+version \n Name and Namespace are now ignored,
                        but the fields continue to exist for backwards compatibility
                        of parsing the config. The name of the generated config was/is
                        always fixed as is the namespace so these fields have always
                        been a no-op. \n https://tools.ietf.org/html/rfc6902 \n The
                        node-level patches will be applied after the cluster-level
                        patches have been applied. (See Cluster.KubeadmConfigPatchesJSON6902)"
                      items:
                        description: PatchJSON6902 represents an inline kustomize
                          json 6902 patch https://tools.ietf.org/html/rfc6902
                        properties:
                          group:
                            description: these fields specify the patch target resource
                            type: string
                          kind:
                            type: string
                          patch:
                            description: Patch should contain the contents of the
                              json patch as a string
                            type: string
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - patch
                        - version
                        type: object
                      type: array
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels with which the respective
                        node will be labeled
                      type: object
                    role:
                      description: "Role defines the role of the node in the Kubernetes
                        cluster created by kind \n Defaults to \"control-plane\""
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: KindClusterStatus defines the observed state of KindCluster
            properties:
              failureMessage:
                description: FailureMessage provides a detailed summary of the reconciliation
                  failure
                type: string
              failureReason:
                description: FailureReason provides a programmatic error code describing
                  a fatal reconciliation failure
                type: string
              ready:
                default: false
                description: Ready status indicates whether the kind cluster is available
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
